<?php

namespace PleskExt\PhpVulnerabilityScanner;

class ComposerLock
{
    const LIST_FILE_NAME = 'composer-lock.json';

    public function getList()
    {
        if (!$this->isListFileExists()) {
            return [];
        }
        $listFilePath = $this->getListFilePath();
        try {
            $json = file_get_contents($listFilePath);
            if (false === $json) {
                throw new \Exception("Unable to get contents of '{$listFilePath}'");
            }
            $list = json_decode($json);
            if (false === $list) {
                $error = json_last_error();
                throw new \Exception("Unable to decode contents of '{$listFilePath}': {$error}");
            }
            return $list;
        } catch (\Exception $e) {
            pm_Log::debug($e);
            pm_Log::err("Unable to retrieve list of composer.lock files from '{$listFilePath}': {$e->getMessage()}");
            return [];
        }
    }

    public function setList($list)
    {
        $listFilePath = $this->getListFilePath();
        try {
            $json = json_encode($list);
            if (false === $json) {
                $error = json_last_error();
                throw new \Exception("Unable to encode list of composer.lock files : {$error}");
            }
            $result = file_put_contents($listFilePath, $json);
            if (false === $result) {
                throw new \Exception("Unable to put contents into '{$listFilePath}'");
            }
        } catch (\Exception $e) {
            pm_Log::debug($e);
            pm_Log::err("Unable to store list of composer.lock files into '{$listFilePath}': {$e->getMessage()}");
        }
    }

    private function isListFileExists()
    {
        return file_exists($this->getListFilePath());
    }

    private function getListFilePath()
    {
        return \pm_Context::getVarDir() . static::LIST_FILE_NAME;
    }
}